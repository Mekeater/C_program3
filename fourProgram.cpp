#include<stdio.h>
void main()
{
	//获取变量的字节数、值和地址
	/*short s=1;
	printf("类型\t字节数\t地址\t值\n");
	printf("short\t%d\t%x\t%d\n",sizeof(s),&s,s);*/

	//指针
	/*变量的指针
	1、变量的直接存取:按变量名访问变量所对应的内存区域的方式
	2、变量的间接存取:首先通过某种方式(通常是用取地址运算符"&")获得变量的地址，然后用该地址来访问变量所对应的内存区域
	3、变量的地址也称为变量的指针。引入变量的指针的概念就是通过指针来间接的存取变量。
	   为此C语言定义了取地址运算符"&",和指针运算符"*"(也称为间接访问运算符)。
	   例如整形变量i的指针可以通过&i求出，i的内容可以通过*(&i)求出，与直接使用变量名i的效果相同\
	/*其他指针
	1、数组的指针:数组所占用的内存单元区域首地址
	2、函数的指针:函数代码所占用的内存单元区域的首地址
	3、指针变量:用来存储指针;指针变量声明符"*"*/

	//利用指针变量间接访问普通变量
	/*double a,b,c;
	double *pa=&a,*pb=&b,*pc=&c;
	printf("请输入a,b,c的值\n");
	scanf("%lf %lf %lf",pa,pb,pc);
	printf("输出a,b,c的值\n");
	printf("%lf %lf %lf\n",*pa,*pb,*pc);*/

	//指针变量的加减
	/*int a[10]={1,2,3,4,5,6,7,8,9,10};
	int *p=&a[5];
	printf("%d %d\n",*p-1,*p+1);*/

	//int array[3][4]={{1,2,3,4},{5,6,7,8},{9,10,11,12}};
	//按行指针变量区二维数组的值
	/*int (*p)[4];
	p=array;
	printf("%d\n",*(*(p+1)+1));*/
	//定义二维数组元素的指针变量使其指向首元素，获取二维数组是的元素值
	/*int *p;
	p=&array[0][0];
	printf("%d\n",*p);*/
}